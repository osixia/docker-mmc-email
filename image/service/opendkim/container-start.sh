#!/bin/bash -e

#Â delete preexisting autogenerated files
[ -f /etc/opendkim/KeyTable ] || rm -f /etc/opendkim/KeyTable
[ -f /etc/opendkim/SigningTable ] || rm -f /etc/opendkim/SigningTable

touch /etc/opendkim/KeyTable
touch /etc/opendkim/SigningTable

echo "$SERVER_NAME" >> /etc/opendkim/TrustedHosts

# list mail domains

LDAP_AUTH=""
if [ -n "${LDAP_BIND_DN}" ]; then
  LDAP_AUTH="-D ${LDAP_BIND_DN}"
fi
if [ -n "${LDAP_BIND_PW}" ]; then
  LDAP_AUTH="$LDAP_AUTH -w ${LDAP_BIND_PW}"
fi

# better way ?
HOST_FILE="ldap-hosts"
touch $HOST_FILE

ldapsearch -x -H ${LDAP_URL} -b ${LDAP_BASE_DN} "(&(objectClass=mailDomain)(virtualdomain=*))" ${LDAP_AUTH} | grep "virtualdomain:" > ${HOST_FILE} || true
sed -i "s/virtualdomain: //g" $HOST_FILE

for domain in $(cat $HOST_FILE);
do

  echo "Domain: $domain"

  # the domain private key don't exists -> generate one
  if [ ! -f "/etc/opendkim/keys/$domain.key" ]; then

    echo "-> key not found, generating one"
    opendkim-genkey --domain=$domain --append-domain --selector=$OPENDKIM_SELECTOR --directory /etc/opendkim/keys

    echo "-> add the following DNS entry:"
    cat /etc/opendkim/keys/mail.txt

    mv /etc/opendkim/keys/mail.private /etc/opendkim/keys/$domain.key
    mv /etc/opendkim/keys/mail.txt /etc/opendkim/keys/$domain.txt
  fi

  echo "$OPENDKIM_SELECTOR._domainkey.$domain. $domain:$OPENDKIM_SELECTOR:/etc/opendkim/keys/$domain.key" >> /etc/opendkim/KeyTable
  echo "*@$domain $OPENDKIM_SELECTOR._domainkey.$domain." >> /etc/opendkim/SigningTable
  echo "$domain" >> /etc/opendkim/TrustedHosts
  echo "*.$domain" >> /etc/opendkim/TrustedHosts

done

chown opendkim:opendkim -R /etc/opendkim/keys/

#!/bin/bash -e

FIRST_START_DONE="/etc/docker-opendkim-first-start-done"

# container first start
if [ ! -e "$FIRST_START_DONE" ]; then

  echo "$SERVER_NAME" >> /etc/opendkim/TrustedHosts

  touch $FIRST_START_DONE
fi

#Â delete preexisting autogenerated files
[ -f /etc/opendkim/KeyTable ] || rm -f /etc/opendkim/KeyTable
[ -f /etc/opendkim/SigningTable ] || rm -f /etc/opendkim/SigningTable

touch /etc/opendkim/KeyTable
touch /etc/opendkim/SigningTable

# list mail domains
LDAP_AUTH=""
if [ -n "${LDAP_BIND_DN}" ]; then
  LDAP_AUTH="-D ${LDAP_BIND_DN}"
fi
if [ -n "${LDAP_BIND_PW}" ]; then
  LDAP_AUTH="$LDAP_AUTH -w ${LDAP_BIND_PW}"
fi

# better way ?
HOST_FILE="ldap-hosts"
touch $HOST_FILE

ldapsearch -x -H ${LDAP_URL} -b ${LDAP_BASE_DN} "(&(objectClass=mailDomain)(virtualdomain=*))" ${LDAP_AUTH} | grep "virtualdomain:" > ${HOST_FILE} || true
sed -i "s/virtualdomain: //g" $HOST_FILE

for domain in $(cat $HOST_FILE);
do

  echo "Domain: $domain"

  # the domain private key doesn't exists -> generate one
  if [ ! -f "/osixia/opendkim/keys/$domain.key" ]; then

    echo "-> key not found, generating one"
    opendkim-genkey --domain=$domain --append-domain --selector=$OPENDKIM_SELECTOR --directory /osixia/opendkim/keys

    echo "-> add the following DNS entry:"
    cat /osixia/opendkim/keys/mail.txt

    mv /osixia/opendkim/keys/mail.private /osixia/opendkim/keys/$domain.key
    mv /osixia/opendkim/keys/mail.txt /osixia/opendkim/keys/$domain.txt
  fi

  echo "$OPENDKIM_SELECTOR._domainkey.$domain. $domain:$OPENDKIM_SELECTOR:/osixia/opendkim/keys/$domain.key" >> /etc/opendkim/KeyTable
  echo "*@$domain $OPENDKIM_SELECTOR._domainkey.$domain." >> /etc/opendkim/SigningTable
  echo "$domain" >> /etc/opendkim/TrustedHosts
  echo "*.$domain" >> /etc/opendkim/TrustedHosts

done

rm -f $HOST_FILE

chmod 755 /osixia/opendkim/keys
chmod 600 /osixia/opendkim/keys/*
chown opendkim:opendkim -R /osixia/opendkim
chown opendkim:opendkim -R /etc/opendkim
